apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o k8s
    kompose.service.type: LoadBalancer
    kompose.version: 1.31.2 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: authentication
  name: authentication
spec:
  replicas: 5
  selector:
    matchLabels:
      io.kompose.service: authentication
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o k8s
        kompose.service.type: LoadBalancer
        kompose.version: 1.31.2 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/online-electronic-store-online-electronic-store-network: "true"
        io.kompose.service: authentication
    spec:
      initContainers:
        - name: wait-for-db
          image: postgres
          command: ['sh', '-c', 'until pg_isready -h db -p 5432; do echo waiting for db; sleep 2; done;']
      containers:
        - args:
            - bash
            - -c
            - alembic upgrade heads && python app/main.py
          env:
            - name: DEV
              value: "true"
            - name: IS_LOCAL
              value: "false"
          image: agiev/online_electronic_store-authentication
          name: authentication
          ports:
            - containerPort: 8081
              protocol: TCP
          resources:
            requests:
              cpu: "500m"   # Запрашиваем 0.5 ядра CPU
              memory: "128Mi" # Запрашиваем 256 мебибайт памяти
            limits:
              cpu: "500m"       # Лимит в 1 ядро CPU
              memory: "128Mi" # Лимит в 512 мебибайт памяти
          volumeMounts:
            - mountPath: /authentication_service/log
              name: authentication-claim0
      restartPolicy: Always
      volumes:
        - name: authentication-claim0
          persistentVolumeClaim:
            claimName: authentication-claim0
status: {}
